task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}

allprojects { currProject ->
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

task printParam {
    doLast { println givenParameter }
}

printParam.dependsOn 'help'

tasks.addRule('Check correctness of running tests') { String taskName ->
    gradle.taskGraph.whenReady {
        Map<String, String> args = gradle.startParameter.systemPropertiesArgs
        gradle.taskGraph.allTasks.each { Task task ->
            if (task.name.contains('integTest') && !args.containsKey('profile')) {
                throw new org.gradle.api.tasks.StopExecutionException("Profile was not specified to run tests (-Dprofile=ci).")
            }
        }
    }
}

apply from: file("${rootProject.projectDir}/gradle/releaseNotes.gradle")
apply from: file("${rootProject.projectDir}/gradle/codeQuality.gradle")

subprojects { project ->
    apply plugin: 'java'
    apply from: file("${rootProject.projectDir}/gradle/integTest.gradle")
    apply from: file("${rootProject.projectDir}/gradle/coverage.gradle")
    apply from: file("${rootProject.projectDir}/gradle/publishing.gradle")

    task areTestsExist {
        if (file("${projectDir}/src/test/java")
              .listFiles()
              .findAll{it!=null}
              .isEmpty()) {
            println 'Test directory is empty'
        } else {
            println 'Test directory is not empty, will execute tests'
        }
    }
    test.mustRunAfter areTestsExist

    dependencies {
        compile "org.slf4j:slf4j-api:$slf4jVersion"

        testCompile 'org.mockito:mockito-core:2.7.18',
                'junit:junit:4.12'
    }


}
